#this script is a template, the deploy script replaced the variables
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{PROJECTNAME}}-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{PROJECTNAME}}
  template:
    metadata:
      labels:
        app: {{PROJECTNAME}}
    spec:
      containers:
      - command:
        - npm
        - start
        env:
        - name: DB_SOCKET
          valueFrom:
            configMapKeyRef:
              key: db.server
              name: {{PROJECTNAME}}-config
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              key: db.username
              name: {{PROJECTNAME}}-config
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: db.password
              name: {{PROJECTNAME}}-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: db.name
              name: {{PROJECTNAME}}-config
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: env.name
              name: {{PROJECTNAME}}-config
        image: {{PRIMARY_IMAGE}}
        imagePullPolicy: IfNotPresent
        name: {{PROJECTNAME}}
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 50m
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /cloudsql
          name: cloudsql
      - command:
        - /cloud_sql_proxy
        - -dir=/cloudsql
        - -credential_file=/secret/creds.json
        - -instances=strawhouse-internals:us-central1:$(DB_SERVER)
        env:
        - name: DB_SERVER
          valueFrom:
            configMapKeyRef:
              key: db.server
              name: {{PROJECTNAME}}-config
        image: b.gcr.io/cloudsql-docker/gce-proxy
        imagePullPolicy: Always
        name: cloud-sql-proxy
        resources: {}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /cloudsql
          name: cloudsql
        - mountPath: /secret/
          name: secret-volume
        - mountPath: /etc/ssl/certs
          name: ssl-certs
      volumes:
      - name: secret-volume
        secret:
          secretName: {{PROJECTNAME}}dbcreds
      - hostPath:
          path: /etc/ssl/certs
        name: ssl-certs
      - emptyDir: {}
        name: cloudsql